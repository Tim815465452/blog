<?xml-stylesheet type="text/xsl" href="/codes/template.xsl"?>
<page>
	<title>NOIp 2012 PJT1</title>
	<html>
		<center>
			<h2>NOIp 2012 PJT1</h2>
			<var>2017-06-28 21:37 by zsz12251665</var>
		</center>
		<h3>Problem</h3>
		<section>
			<a target="_blank" href="https://www.luogu.org/problem/show?pid=1075">Luogu</a>
			<br/>
			<a target="_blank" href="https://www.vijos.org/p/1786">Vijos</a>
		</section>
		<h3>Solution</h3>
		<section>
			<p>This problem is very simple. You just need to find the small prime, and you'll get the big prime. So the solution will talk about how to check whether the integer is a prime. </p>
			<p>We need to try all the integers from 2 to floor(sqrt(n)). Why sqrt(n)? That is because if there is a division called d which is bigger than sqrt(n), then n/d must be an integer, and it must be smaller than sqrt(n). If both n/d and d are bigger than sqrt(n), then (n/d)*d, which equals n, must be bigger than sqrt(n)^2, which equals n too. That is impossible. So you can check whether the integer n is a prime by trying all the integers from 2 to floor(sqrt(n)). </p>
			<p>P. S. In fact, we don't need to check whether the number is a prime. Because the problem says n will always be the product of two primes. So we just need to find the small number, and output their quotient. </p>
		</section>
		<h3>Code</h3>
		<section>
			<p>Pascal</p>
			<div class="codebox">
				var<br/>
				&#160;&#160;&#160;&#160;i,n:longint;<br/>
				function prime(n:longint):boolean;<br/>
				var<br/>
				&#160;&#160;&#160;&#160;i:longint;<br/>
				begin<br/>
				&#160;&#160;&#160;&#160;for i:=2 to trunc(sqrt(n)) do<strong>//Attention that the loop is from 2 because 2 is the smallest prime</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if n mod i=0 then<strong>//If there is a division, exit false</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(false);<br/>
				&#160;&#160;&#160;&#160;exit(true);<br/>
				end;<br/>
				begin<br/>
				&#160;&#160;&#160;&#160;read(n);<br/>
				&#160;&#160;&#160;&#160;for i:=2 to n do<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if prime(i)and(n mod i=0) then<strong>//You can replace this line with "if n mod i=0 then"</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(n div i);<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;halt;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
				end.<br/>
			</div>
			<p>C++</p>
			<div class="codebox">
				#include&lt;cstdio&gt;<br/>
				int prime(long n)<br/>
				{<br/>
				&#160;&#160;&#160;&#160;for(long i=2;i*i&lt;n;i++)<strong>//Attention that the loop is from 2 because 2 is the smallest prime</strong><br/><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if(n%i==0)<strong>//If there is a division, return false</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return 0;<br/>
				&#160;&#160;&#160;&#160;return 1;<br/>
				}<br/>
				int main()<br/>
				{<br/>
				&#160;&#160;&#160;&#160;long n;<br/>
				&#160;&#160;&#160;&#160;scanf("%ld",&amp;n);<br/>
				&#160;&#160;&#160;&#160;for(long i=2;i&lt;n;i++)<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if((prime(i)==1)&amp;&amp;(n%i==0))<strong>//You can replace this line with "if(n%i==0)"</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;printf("%ld",n/i);<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return 0;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;return 0;<br/>
				}<br/>
			</div>
		</section>
	</html>
</page>
