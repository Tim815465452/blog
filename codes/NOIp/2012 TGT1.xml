<?xml-stylesheet type="text/xsl" href="/codes/template.xsl"?>
<page>
	<title>NOIp 2012 TGT1</title>
	<html>
		<center>
			<h2>NOIp 2012 TGT1</h2>
			<var>2017-05-17 21:12 by zsz12251665</var>
		</center>
		<h3>Problem</h3>
		<section>
			<a target="_blank" href="https://www.luogu.org/problem/show?pid=1079">Luogu</a>
			<br/>
			<a target="_blank" href="https://www.vijos.org/p/1778">Vijos</a>
		</section>
		<h3>Solution</h3>
		<section>
			<p>It is the first problem of NOIp 2012, so it won't be difficult, will it? The solution is simple because the Vigenère Password can be keep in an easy fomula that is given in the code. </p>
		</section>
		<h3>Code</h3>
		<section>
			<p>Pascal</p>
			<div class="codebox">
				var<br/>
				&#160;&#160;&#160;&#160;key,txt:ansistring;<br/>
				&#160;&#160;&#160;&#160;i:integer;<br/>
				begin<br/>
				&#160;&#160;&#160;&#160;readln(key);<strong>//In Pascal, read a string means to read every char until a return or an enter, so you'd better to readln them string by string</strong><br/>
				&#160;&#160;&#160;&#160;readln(txt);<br/>
				&#160;&#160;&#160;&#160;for i:=1 to length(txt) do<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;txt[i]:=chr((ord(txt[i]) mod 32-ord(key[(i-1) mod length(key)+1]) mod 32+26) mod 26+ord(txt[i])-ord(txt[i]) mod 32+1);<strong>//In ASCII, 'A' ~ 'Z' are 65 to 90, 'a' ~ 'z' are 97 to 122. So a char which modulo 32 can show its order in the alphabet</strong><br/>
				&#160;&#160;&#160;&#160;write(txt);<br/>
				end.<br/>
			</div>
			<p>C++</p>
			<div class="codebox">
				#include&lt;cstdio&gt;<br/>
				#include&lt;cstring&gt;<strong>//We need to use the strlen function in cstring</strong><br/>
				int main()<br/>
				{<br/>
				&#160;&#160;&#160;&#160;char key[100],txt[1000];<br/>
				&#160;&#160;&#160;&#160;scanf("%s%s",&amp;key,&amp;txt);<br/>
				&#160;&#160;&#160;&#160;int keylen=strlen(key),txtlen=strlen(txt);<strong>//In C/C++, the strlen() is not very fast, so I use two variable to keep them</strong><br/>
				&#160;&#160;&#160;&#160;for(int i=0;i&lt;txtlen;i++)<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;txt[i]=(txt[i]%32-key[i%keylen]%32+26)%26+txt[i]-txt[i]%32+1;<strong>//In ASCII, 'A' ~ 'Z' are 65 to 90, 'a' ~ 'z' are 97 to 122. So a char which modulo 32 can show its order in the alphabet</strong><br/>
				&#160;&#160;&#160;&#160;printf("%s",txt);<br/>
				&#160;&#160;&#160;&#160;return 0;<br/>
				}<br/>
			</div>
		</section>
	</html>
</page>
