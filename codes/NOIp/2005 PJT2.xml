<?xml-stylesheet type="text/xsl" href="/codes/template.xsl"?>
<page>
	<title>NOIp 2005 PJT2</title>
	<html>
		<center>
			<h2>NOIp 2005 PJT2</h2>
			<var>2017-06-29 21:05 by zsz12251665</var>
		</center>
		<h3>Problem</h3>
		<section>
			<a target="_blank" href="https://www.luogu.org/problem/show?pid=1047">Luogu</a>
			<br/>
			<a target="_blank" href="https://www.vijos.org/p/1103">Vijos</a>
		</section>
		<h3>Solution</h3>
		<section>
			<p>Well, I know that the description looks that it requires a segment tree to solve. But it actually doesn't. It is just a simulation problem. You just need an array to keep whether there is a tree at the point and cut the ones in the interval down. In the end, count the number of the trees left. </p>
		</section>
		<h3>Code</h3>
		<section>
			<p>Pascal</p>
			<div class="codebox">
				var<br/>
				&#160;&#160;&#160;&#160;tree:array[0..10000]of boolean;<br/>
				&#160;&#160;&#160;&#160;l,m,ans,s,e,i,j:integer;<br/>
				begin<br/>
				&#160;&#160;&#160;&#160;read(l);<br/>
				&#160;&#160;&#160;&#160;for i:=0 to l do<strong>//Format the tree array</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tree[i]:=true;<br/>
				&#160;&#160;&#160;&#160;read(m);<br/>
				&#160;&#160;&#160;&#160;for i:=1 to m do<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;read(s,e);<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j:=s to e do<strong>//Cut the trees down</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tree[j]:=false;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
				&#160;&#160;&#160;&#160;ans:=0;<br/>
				&#160;&#160;&#160;&#160;for i:=0 to l do<strong>//Count the number of the trees</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if tree[i] then<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;inc(ans);<br/>
				&#160;&#160;&#160;&#160;write(ans);<br/>
				end.<br/>
			</div>
			<p>C++</p>
			<div class="codebox">
				#include&lt;cstdio&gt;<br/>
				int tree[10001];<br/>
				int main()<br/>
				{<br/>
				&#160;&#160;&#160;&#160;int l,m,ans=0;<br/>
				&#160;&#160;&#160;&#160;scanf("%d",&amp;l);<br/>
				&#160;&#160;&#160;&#160;for(int i=0;i&lt;=l;i++)<strong>//Format the tree array</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tree[i]=1;<br/>
				&#160;&#160;&#160;&#160;scanf("%d",&amp;m);<br/>
				&#160;&#160;&#160;&#160;for(int i=0;i&lt;m;i++)<br/>
				&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int s,e;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scanf("%d%d",&amp;s,&amp;e);<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for(int j=s;j&lt;=e;j++)<strong>//Cut the trees down</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tree[j]=0;<br/>
				&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;for(int i=0;i&lt;=l;i++)<strong>//Count the number of the trees</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if(tree[i]==1)<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ans++;<br/>
				&#160;&#160;&#160;&#160;printf("%d",ans);<br/>
				&#160;&#160;&#160;&#160;return 0;<br/>
				}<br/>
			</div>
		</section>
	</html>
</page>
