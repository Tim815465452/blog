<?xml-stylesheet type="text/xsl" href="/codes/template.xsl"?>
<page>
	<title>POJ 3278</title>
	<html>
		<center>
			<h2>POJ 3278</h2>
			<var>2017-05-08 21:27 by zsz12251665</var>
		</center>
		<h3>Problem</h3>
		<section>
			<a target="_blank" href="https://vjudge.net/problem/POJ-3278">vjudge</a>
			<br/>
			<a target="_blank" href="http://poj.org/problem?id=3278">POJ</a>
		</section>
		<h3>Solution</h3>
		<section>
			<p>The problem needs a BFS(Breadth First Search). A queue can solve the problem. But you'd better to add mark to the points you've visited, or you may get a TLE(Time Limit Exceed). </p>
		</section>
		<h3>Code</h3>
		<section>
			<p>Pascal</p>
			<div class="codebox">
			const<br/>
			&#160;&#160;&#160;&#160;MAXN=100000;<br/>
			var<br/>
			&#160;&#160;&#160;&#160;time,queue:array[0..MAXN]of longint;<strong>//The time array is used to mark if it is visited and keep the time to reach</strong><br/>
			&#160;&#160;&#160;&#160;head,foot,tmp,n,k,t:longint;<br/>
			begin<br/>
			&#160;&#160;&#160;&#160;for t:=0 to MAXN do<strong>//Format the time array</strong><br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[t]:=-1;<br/>
			&#160;&#160;&#160;&#160;read(n,k);<br/>
			&#160;&#160;&#160;&#160;t:=0;<br/>
			&#160;&#160;&#160;&#160;head:=0;<br/>
			&#160;&#160;&#160;&#160;foot:=1;<br/>
			&#160;&#160;&#160;&#160;time[n]:=0;<br/>
			&#160;&#160;&#160;&#160;queue[head]:=n;<br/>
			&#160;&#160;&#160;&#160;tmp:=foot;<strong>//tmp is used to keep the end of the queue of this minute</strong><br/>
			&#160;&#160;&#160;&#160;while true do<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;inc(t);<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while head&lt;&gt; tmp do<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if queue[head]=k then<strong>//If FJ has come to k, print the time and halt</strong><br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(time[queue[head]]);<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;halt;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (queue[head]&lt;MAXN)and(time[queue[head]+1]=-1) then<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]+1]:=t;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]:=queue[head]+1;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot:=(foot+1) mod MAXN;<strong>//Don't forget to modulo MAXN to avoid getting over array limit</strong><br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (queue[head]&gt;-1)and(time[queue[head]-1]=-1) then<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]-1]:=t;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]:=queue[head]-1;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot:=(foot+1) mod MAXN;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (queue[head]&lt;(MAXN+1)/2)and(time[queue[head]*2]=-1) then<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;begin<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]*2]:=t;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]:=queue[head]*2;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot:=(foot+1) mod MAXN;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;head:=(head+1) mod MAXN;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp:=foot;<br/>
			&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end;<br/>
			end.<br/>
			</div>
			<p>C++</p>
			<div class="codebox">
				#include&lt;cstdio&gt;<br/>
				#define MAXN 100001<br/>
				long time[MAXN],queue[MAXN],head=0,foot=1;<strong>//The time array is used to mark if it is visited and keep the time to reach</strong><br/>
				int main()<br/>
				{<br/>
				&#160;&#160;&#160;&#160;for(long t=0;t&lt;MAXN;i++)<strong>//Format the time array</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[t]=-1;<br/>
				&#160;&#160;&#160;&#160;long n,k,t=0;<br/>
				&#160;&#160;&#160;&#160;scanf("%d%d",&amp;n,&amp;k);<br/>
				&#160;&#160;&#160;&#160;time[n]=0;<br/>
				&#160;&#160;&#160;&#160;queue[head]=n;<br/>
				&#160;&#160;&#160;&#160;long tmp=foot;<strong>//tmp is used to keep the end of the queue of this minute</strong><br/>
				&#160;&#160;&#160;&#160;while(true)<br/>
				&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;t++;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while(head!=tmp)<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if(queue[head]==k)<strong>//If FJ has come to k, print the time and return</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;printf("%d",time[queue[head]]);<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return 0;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if((queue[head]&lt;MAXN)&amp;&amp;(time[queue[head]+1]==-1))<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]+1]=t;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]=queue[head]+1;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot=(foot+1)%MAXN;<strong>//Don't forget to modulo MAXN to avoid getting over array limit</strong><br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if((queue[head]&gt;-1)&amp;&amp;(time[queue[head]-1]==-1))<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]-1]=t;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]=queue[head]-1;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot=(foot+1)%MAXN;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if(((queue[head]&lt;(MAXN+1)/2))&amp;&amp;(time[queue[head]*2]==-1))<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;time[queue[head]*2]=t;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue[foot]=queue[head]*2;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foot=(foot+1)%MAXN;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;head=(head+1)%MAXN;<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br/>
				&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp=foot;<br/>
				&#160;&#160;&#160;&#160;}<br/>
				}<br/>
			</div>
		</section>
	</html>
</page>
